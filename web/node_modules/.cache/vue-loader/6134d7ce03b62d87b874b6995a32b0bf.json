{"remainingRequest":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\src\\views\\Fornecedor\\NovoFornecedor.vue?vue&type=template&id=59e4046a&","dependencies":[{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\src\\views\\Fornecedor\\NovoFornecedor.vue","mtime":1618070144459},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}