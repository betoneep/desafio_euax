{"remainingRequest":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\src\\views\\Contrato\\ContratoFornecedor.vue?vue&type=template&id=13625e72&","dependencies":[{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\src\\views\\Contrato\\ContratoFornecedor.vue","mtime":1625696140054},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}