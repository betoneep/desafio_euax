{"remainingRequest":"X:\\Projetos Git\\Desafio EUAX\\web\\web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!X:\\Projetos Git\\Desafio EUAX\\web\\web\\src\\views\\UnidadeMedida\\NovoUnidadeMedida.vue?vue&type=script&lang=js&","dependencies":[{"path":"X:\\Projetos Git\\Desafio EUAX\\web\\web\\src\\views\\UnidadeMedida\\NovoUnidadeMedida.vue","mtime":1627108288553},{"path":"X:\\Projetos Git\\Desafio EUAX\\web\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Desafio EUAX\\web\\web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Desafio EUAX\\web\\web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Desafio EUAX\\web\\web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgUm90YXRlU3F1YXJlIGZyb20gIi4uLy4uL2NvbXBvbmVudHMvUm90YXRlU3F1YXJlIjsNCmltcG9ydCBVbmlkYWRlTWVkaWRhU2VydmljbyBmcm9tICIuLi8uLi9zZXJ2aWNvL1VuaWRhZGVNZWRpZGFTZXJ2aWNvIjsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiTm92b1VuaWRhZGVNZWRpZGEiLA0KICBjb21wb25lbnRzOiB7DQogICAgUm90YXRlU3F1YXJlLA0KICAgIFVuaWRhZGVNZWRpZGFTZXJ2aWNvDQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGxvYWRpbmc6IGZhbHNlLA0KICAgICAgdGlwb3NVbmlkYWRlTWVkaWRhT3B0aW9uczogW10sDQogICAgICB2aWV3TW9kZWw6IHsNCiAgICAgICAgaWQ6IHRoaXMuJHN0b3JlLmdldHRlcnMuZW1wdHlHdWlkLA0KICAgICAgICBkZXNjcmljYW86ICIiLA0KICAgICAgICB0aXBvVW5pZGFkZU1lZGlkYUlkOiAiIiwNCiAgICAgICAgdmFsb3I6IDAsDQogICAgICAgIHRpcG9VbmlkYWRlTWVkaWRhQmFzZUlkOiAiIg0KICAgICAgfQ0KICAgIH07DQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgbGV0IHVuaWRhZGVNZWRpZGFJZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsNCiAgICBpZiAodW5pZGFkZU1lZGlkYUlkKSB0aGlzLk9idGVyKHVuaWRhZGVNZWRpZGFJZCk7DQogICAgdGhpcy5PYnRlclRpcG9zVW5pZGFkZU1lZGlkYVNlbGVjdCgpOw0KICB9LA0KICBtZXRob2RzOiB7DQogICAgVmFsaWRhckZvcm0oZXZ0KSB7DQogICAgICBldnQucHJldmVudERlZmF1bHQoKTsNCg0KICAgICAgaWYgKA0KICAgICAgICB0aGlzLnZpZXdNb2RlbC50aXBvVW5pZGFkZU1lZGlkYUlkID09DQogICAgICAgIHRoaXMudmlld01vZGVsLnRpcG9VbmlkYWRlTWVkaWRhQmFzZUlkDQogICAgICApIHsNCiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7DQogICAgICAgIHRoaXMuJG5vdGlmeSh7DQogICAgICAgICAgZGF0YTogWyJVbmlkYWRlcyBkZXZlbSBzZXIgZGlmZXJlbnRlcy4iXSwNCiAgICAgICAgICB0eXBlOiAid2FybiIsDQogICAgICAgICAgZHVyYXRpb246IDUwMDANCiAgICAgICAgfSk7DQogICAgICAgIHJldHVybjsNCiAgICAgIH0NCg0KICAgICAgaWYgKHRoaXMudmlld01vZGVsLmlkICE9PSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmVtcHR5R3VpZCkgdGhpcy5FZGl0YXIoKTsNCiAgICAgIGVsc2UgdGhpcy5Ob3ZvKCk7DQogICAgfSwNCiAgICBPYnRlcih1bmlkYWRlTWVkaWRhSWQpIHsNCiAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOw0KICAgICAgVW5pZGFkZU1lZGlkYVNlcnZpY28uT2J0ZXIodW5pZGFkZU1lZGlkYUlkKQ0KICAgICAgICAudGhlbigocmVzcG9zdGEpID0+IHsNCiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsNCiAgICAgICAgICB0aGlzLnZpZXdNb2RlbCA9IHJlc3Bvc3RhLmRhdGE7DQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaCgoZXJybykgPT4gew0KICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOw0KICAgICAgICAgIHRoaXMuJG5vdGlmeSh7DQogICAgICAgICAgICBkYXRhOiBlcnJvLnJlc3BvbnNlLmRhdGEuZXJyb3MsDQogICAgICAgICAgICB0eXBlOiAid2FybiIsDQogICAgICAgICAgICBkdXJhdGlvbjogNTAwMA0KICAgICAgICAgIH0pOw0KICAgICAgICB9KTsNCiAgICB9LA0KICAgIE5vdm8oKSB7DQogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsNCiAgICAgIFVuaWRhZGVNZWRpZGFTZXJ2aWNvLk5vdm8odGhpcy52aWV3TW9kZWwpDQogICAgICAgIC50aGVuKCgpID0+IHsNCiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsNCiAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgiL3VuaWRhZGVNZWRpZGEiKTsNCiAgICAgICAgICB0aGlzLiRub3RpZnkoew0KICAgICAgICAgICAgZGF0YTogWyJDb252ZXJzw6NvIGNhZGFzdHJhZGEgY29tIHN1Y2Vzc28uIl0sDQogICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsDQogICAgICAgICAgICBkdXJhdGlvbjogNTAwMA0KICAgICAgICAgIH0pOw0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goKGVycm8pID0+IHsNCiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsNCiAgICAgICAgICB0aGlzLiRub3RpZnkoew0KICAgICAgICAgICAgZGF0YTogZXJyby5yZXNwb25zZS5kYXRhLmVycm9zLA0KICAgICAgICAgICAgdHlwZTogIndhcm4iLA0KICAgICAgICAgICAgZHVyYXRpb246IDUwMDANCiAgICAgICAgICB9KTsNCiAgICAgICAgfSk7DQogICAgfSwNCiAgICBFZGl0YXIoKSB7DQogICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsNCiAgICAgIFVuaWRhZGVNZWRpZGFTZXJ2aWNvLkVkaXRhcih0aGlzLnZpZXdNb2RlbCkNCiAgICAgICAgLnRoZW4oKCkgPT4gew0KICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOw0KICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvdW5pZGFkZU1lZGlkYSIpOw0KICAgICAgICAgIHRoaXMuJG5vdGlmeSh7DQogICAgICAgICAgICBkYXRhOiBbIkNvbnZlcnPDo28gZWRpdGFkbyBjb20gc3VjZXNzby4iXSwNCiAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwNCiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAwDQogICAgICAgICAgfSk7DQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaCgoZXJybykgPT4gew0KICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOw0KICAgICAgICAgIHRoaXMuJG5vdGlmeSh7DQogICAgICAgICAgICBkYXRhOiBlcnJvLnJlc3BvbnNlLmRhdGEuZXJyb3MsDQogICAgICAgICAgICB0eXBlOiAid2FybiIsDQogICAgICAgICAgICBkdXJhdGlvbjogNTAwMA0KICAgICAgICAgIH0pOw0KICAgICAgICB9KTsNCiAgICB9LA0KICAgIE9idGVyVGlwb3NVbmlkYWRlTWVkaWRhU2VsZWN0KCkgew0KICAgICAgdGhpcy4kaHR0cCh7DQogICAgICAgIHVybDogIi90aXBvVW5pZGFkZU1lZGlkYS9vYnRlci1zZWxlY3QiLA0KICAgICAgICBtZXRob2Q6ICJHRVQiDQogICAgICB9KQ0KICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsNCiAgICAgICAgICB0aGlzLnRpcG9zVW5pZGFkZU1lZGlkYU9wdGlvbnMgPSByZXNwb25zZS5kYXRhOw0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goKGVycm8pID0+IHsNCiAgICAgICAgICB0aGlzLiRub3RpZnkoew0KICAgICAgICAgICAgZGF0YTogZXJyby5yZXNwb25zZS5kYXRhLmVycm9zLA0KICAgICAgICAgICAgdHlwZTogIndhcm4iLA0KICAgICAgICAgICAgZHVyYXRpb246IDUwMDANCiAgICAgICAgICB9KTsNCiAgICAgICAgfSk7DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["NovoUnidadeMedida.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"NovoUnidadeMedida.vue","sourceRoot":"src/views/UnidadeMedida","sourcesContent":["<template>\r\n  <div class=\"animated fadeIn\">\r\n    <div v-if=\"loading\" class=\"loading-container\">\r\n      <RotateSquare\r\n        class=\"loading-position animated fadeIn\"\r\n        size=\"60px\"\r\n      ></RotateSquare>\r\n    </div>\r\n    <form v-else @submit=\"ValidarForm\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n          <div class=\"card\">\r\n            <header class=\"card-header\">\r\n              <strong class=\"align-self-center\"\r\n                >{{\r\n                  viewModel.id == this.$store.getters.emptyGuid\r\n                    ? \"Nova Conversão unidade medida\"\r\n                    : \"Editar Conversão unidade medida\"\r\n                }}\r\n              </strong>\r\n            </header>\r\n            <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col\">\r\n                  <div class=\"form-group\">\r\n                    <small>Campos com * são de preenchimento obrigatório</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                  <div class=\"form-group\">\r\n                    <label for>* Descrição</label>\r\n                    <input\r\n                      v-model=\"viewModel.descricao\"\r\n                      class=\"form-control\"\r\n                      type=\"text\"\r\n                      placeholder=\"Digite a descrição\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for>* Unidade Medida</label>\r\n                    <b-form-select\r\n                      v-model=\"viewModel.tipoUnidadeMedidaId\"\r\n                      :options=\"tiposUnidadeMedidaOptions\"\r\n                      required\r\n                    ></b-form-select>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-4 col-lg-4 col-xl-4\">\r\n                  <div class=\"form-group\">\r\n                    <label for>* Quantidade</label>\r\n                    <vue-numeric\r\n                        v-bind:precision=\"3\"\r\n                        v-bind:minus=\"false\"\r\n                        thousand-separator=\".\"\r\n                        decimal-separator=\",\"\r\n                      v-model=\"viewModel.valor\"\r\n                      class=\"form-control\"\r\n                      placeholder=\"Digite a quantidade\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-3 col-lg-3 col-xl-3\">\r\n                  <div class=\"form-group\">\r\n                    <label for>* Unidade Medida</label>\r\n                    <b-form-select\r\n                      v-model=\"viewModel.tipoUnidadeMedidaBaseId\"\r\n                      :options=\"tiposUnidadeMedidaOptions\"\r\n                      required\r\n                    ></b-form-select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-12 col-md-6 col-lg-6 col-xl-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for>Observação</label>\r\n                    <b-form-textarea\r\n                      v-model=\"viewModel.observacao\"\r\n                      rows=\"4\"\r\n                      max-rows=\"12\"\r\n                      placeholder=\"Observações gerais...\"\r\n                    ></b-form-textarea>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"btn-toolbar mb-3 ml-3\" role=\"toolbar\">\r\n              <div class=\"btn-group\" role=\"group\">\r\n                <button class=\"btn btn-success mr-2\" type=\"submit\">\r\n                  Salvar\r\n                </button>\r\n              </div>\r\n              <div class=\"btn-group\" role=\"group\">\r\n                <button\r\n                  class=\"btn btn-secondary\"\r\n                  type=\"reset\"\r\n                  @click=\"$router.go(-1)\"\r\n                >\r\n                  Voltar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport RotateSquare from \"../../components/RotateSquare\";\r\nimport UnidadeMedidaServico from \"../../servico/UnidadeMedidaServico\";\r\n\r\nexport default {\r\n  name: \"NovoUnidadeMedida\",\r\n  components: {\r\n    RotateSquare,\r\n    UnidadeMedidaServico\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      tiposUnidadeMedidaOptions: [],\r\n      viewModel: {\r\n        id: this.$store.getters.emptyGuid,\r\n        descricao: \"\",\r\n        tipoUnidadeMedidaId: \"\",\r\n        valor: 0,\r\n        tipoUnidadeMedidaBaseId: \"\"\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    let unidadeMedidaId = this.$route.params.id;\r\n    if (unidadeMedidaId) this.Obter(unidadeMedidaId);\r\n    this.ObterTiposUnidadeMedidaSelect();\r\n  },\r\n  methods: {\r\n    ValidarForm(evt) {\r\n      evt.preventDefault();\r\n\r\n      if (\r\n        this.viewModel.tipoUnidadeMedidaId ==\r\n        this.viewModel.tipoUnidadeMedidaBaseId\r\n      ) {\r\n        this.loading = false;\r\n        this.$notify({\r\n          data: [\"Unidades devem ser diferentes.\"],\r\n          type: \"warn\",\r\n          duration: 5000\r\n        });\r\n        return;\r\n      }\r\n\r\n      if (this.viewModel.id !== this.$store.getters.emptyGuid) this.Editar();\r\n      else this.Novo();\r\n    },\r\n    Obter(unidadeMedidaId) {\r\n      this.loading = false;\r\n      UnidadeMedidaServico.Obter(unidadeMedidaId)\r\n        .then((resposta) => {\r\n          this.loading = false;\r\n          this.viewModel = resposta.data;\r\n        })\r\n        .catch((erro) => {\r\n          this.loading = false;\r\n          this.$notify({\r\n            data: erro.response.data.erros,\r\n            type: \"warn\",\r\n            duration: 5000\r\n          });\r\n        });\r\n    },\r\n    Novo() {\r\n      this.loading = false;\r\n      UnidadeMedidaServico.Novo(this.viewModel)\r\n        .then(() => {\r\n          this.loading = false;\r\n          this.$router.push(\"/unidadeMedida\");\r\n          this.$notify({\r\n            data: [\"Conversão cadastrada com sucesso.\"],\r\n            type: \"success\",\r\n            duration: 5000\r\n          });\r\n        })\r\n        .catch((erro) => {\r\n          this.loading = false;\r\n          this.$notify({\r\n            data: erro.response.data.erros,\r\n            type: \"warn\",\r\n            duration: 5000\r\n          });\r\n        });\r\n    },\r\n    Editar() {\r\n      this.loading = false;\r\n      UnidadeMedidaServico.Editar(this.viewModel)\r\n        .then(() => {\r\n          this.loading = false;\r\n          this.$router.push(\"/unidadeMedida\");\r\n          this.$notify({\r\n            data: [\"Conversão editado com sucesso.\"],\r\n            type: \"success\",\r\n            duration: 5000\r\n          });\r\n        })\r\n        .catch((erro) => {\r\n          this.loading = false;\r\n          this.$notify({\r\n            data: erro.response.data.erros,\r\n            type: \"warn\",\r\n            duration: 5000\r\n          });\r\n        });\r\n    },\r\n    ObterTiposUnidadeMedidaSelect() {\r\n      this.$http({\r\n        url: \"/tipoUnidadeMedida/obter-select\",\r\n        method: \"GET\"\r\n      })\r\n        .then((response) => {\r\n          this.tiposUnidadeMedidaOptions = response.data;\r\n        })\r\n        .catch((erro) => {\r\n          this.$notify({\r\n            data: erro.response.data.erros,\r\n            type: \"warn\",\r\n            duration: 5000\r\n          });\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}