{"remainingRequest":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\src\\views\\TipoUnidadeMedida\\TipoUnidadeMedidaConversao.vue?vue&type=template&id=28f076f4&","dependencies":[{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\src\\views\\TipoUnidadeMedida\\TipoUnidadeMedidaConversao.vue","mtime":1619479899512},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"X:\\Projetos Git\\Projeto Cooperar\\web-cooperar\\web-cooperar\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}